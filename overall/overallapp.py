# -*- coding: utf-8 -*-
"""overallapp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bwdWMBO0enj2bKI9slhgQ18BlcM1KjZo
"""

import streamlit as st
import pandas as pd
import numpy as np
import pickle
import requests
import io
import matplotlib.pyplot as plt

# GitHub raw link to your pickle model (replace with your repo path)
MODEL_URL = "https://raw.githubusercontent.com/challaharshitha48/match_winner/overall/linear_regression_model.pkl"

@st.cache_resource
def load_model():
    response = requests.get(MODEL_URL)
    model = pickle.load(io.BytesIO(response.content))
    return model

st.set_page_config(page_title="Regression Predictor", layout="wide")

st.title("ðŸ“Š Linear Regression Predictor")
st.write("This app loads a trained regression model from GitHub and makes predictions.")

# Load model
try:
    model = load_model()
    st.success("Model loaded successfully from GitHub!")
except Exception as e:
    st.error(f"Error loading model: {e}")
    st.stop()

# Sidebar input
st.sidebar.header("Input Features")
feature1 = st.sidebar.number_input("Feature 1", min_value=0.0, step=0.1)
feature2 = st.sidebar.number_input("Feature 2", min_value=0.0, step=0.1)
feature3 = st.sidebar.number_input("Feature 3", min_value=0.0, step=0.1)

# Make prediction
if st.sidebar.button("Predict"):
    input_data = np.array([[feature1, feature2, feature3]])
    prediction = model.predict(input_data)
    st.metric("Predicted Value", f"{prediction[0]:.2f}")

    # Visualization
    fig, ax = plt.subplots()
    ax.bar(["Prediction"], [prediction[0]], color="skyblue")
    st.pyplot(fig)

st.markdown("---")
st.subheader("About")
st.write("This Streamlit app loads the trained model from GitHub, "
         "takes user input, and outputs regression predictions with visualization.")