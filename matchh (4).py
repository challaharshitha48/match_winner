# -*- coding: utf-8 -*-
"""matchh.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UWjWTJN2WqFPndkhOFH85bSViXx0S540
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import pickle
# import gzip
# import numpy as np
# 
# # üîπ Load compressed model (.pkl.gz)
# with gzip.open("match_winner_model (1).pkl.gz", "rb") as f:
#     model = pickle.load(f)
# 
# # Team Mapping
# team_mapping = {
#     "Arsenal": 0,
#     "Chelsea": 1,
#     "Liverpool": 2,
#     "Manchester City": 3
# }
# 
# # App Title
# st.title("‚öΩ Match Winner Predictor")
# st.write("Enter match stats to predict the winner")
# 
# # --- UI Layout ---
# col1, col2 = st.columns(2)
# 
# with col1:
#     home_team = st.selectbox("Home Team", list(team_mapping.keys()))
#     home_shots = st.number_input("Home Shots", 0, 50, 10)
#     home_shots_on_target = st.number_input("Home Shots on Target", 0, 20, 5)
#     home_corners = st.number_input("Home Corners", 0, 20, 5)
#     home_fouls = st.number_input("Home Fouls", 0, 30, 10)
#     home_yellow = st.number_input("Home Yellow Cards", 0, 10, 1)
#     home_red = st.number_input("Home Red Cards", 0, 5, 0)
#     home_possession = st.slider("Home Possession (%)", 0, 100, 50)
# 
# with col2:
#     away_team = st.selectbox("Away Team", list(team_mapping.keys()))
#     away_shots = st.number_input("Away Shots", 0, 50, 10)
#     away_shots_on_target = st.number_input("Away Shots on Target", 0, 20, 5)
#     away_corners = st.number_input("Away Corners", 0, 20, 5)
#     away_fouls = st.number_input("Away Fouls", 0, 30, 10)
#     away_yellow = st.number_input("Away Yellow Cards", 0, 10, 1)
#     away_red = st.number_input("Away Red Cards", 0, 5, 0)
#     away_possession = st.slider("Away Possession (%)", 0, 100, 50)
# 
# # Prediction Button
# if st.button("Predict Winner"):
#     input_data = np.array([[
#         team_mapping[home_team],
#         team_mapping[away_team],
#         home_shots, home_shots_on_target, home_corners, home_fouls,
#         home_yellow, home_red, home_possession,
#         away_shots, away_shots_on_target, away_corners, away_fouls,
#         away_yellow, away_red, away_possession
#     ]])
# 
#     prediction = model.predict(input_data)[0]
#     result_map = {0: "Home Win üè†", 1: "Draw ü§ù", 2: "Away Win üö©"}
#     st.success(f"Predicted Result: {result_map[prediction]}")
#