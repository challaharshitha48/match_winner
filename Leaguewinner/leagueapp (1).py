# -*- coding: utf-8 -*-
"""LeagueApp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lSdiJ47numuDEwbd0VXUkWGeF43q9ev8
"""

import streamlit as st
import pickle
import numpy as np

st.set_page_config(page_title="⚽ League Winner Predictor", layout="wide")
st.title("⚽ League Winner Predictor")

# Load pre-trained model
with open("random_forest_model.pkl", "rb") as file:
    model = pickle.load(file)

# Teams list
teams = ["Arsenal", "Chelsea", "Liverpool", "Manchester City"]

# Layout: two columns
col1, col2 = st.columns(2)

with col1:
    home_team = st.selectbox("Select Home Team", teams)
    home_points = st.number_input("Home Points", min_value=0, max_value=100, value=50)
    home_GF = st.number_input("Home Goals For (GF)", min_value=0, max_value=200, value=50)
    home_GA = st.number_input("Home Goals Against (GA)", min_value=0, max_value=200, value=40)

with col2:
    away_team = st.selectbox("Select Away Team", teams)
    away_points = st.number_input("Away Points", min_value=0, max_value=100, value=48)
    away_GF = st.number_input("Away Goals For (GF)", min_value=0, max_value=200, value=48)
    away_GA = st.number_input("Away Goals Against (GA)", min_value=0, max_value=200, value=42)

# Predict button
if st.button("Predict Winner"):
    # Prepare input for model
    input_features = np.array([[home_points, away_points, home_GF, away_GF, home_GA, away_GA]])

    winner = model.predict(input_features)[0]
    st.success(f"The predicted winner is: {winner}")