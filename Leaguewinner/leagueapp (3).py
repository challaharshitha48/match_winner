# -*- coding: utf-8 -*-
"""LeagueApp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lSdiJ47numuDEwbd0VXUkWGeF43q9ev8
"""

# app.py
import streamlit as st
import joblib
import numpy as np

# ==============================
# ⚽ League Winner Predictor
# ==============================
st.set_page_config(page_title="⚽ League Winner Predictor", layout="wide")
st.title("🏆 Premier League Winner Predictor")

# Load the trained model
model = joblib.load("league_winner_model.pkl")

st.write("### Enter Mid-Season Team Stats to Predict if They'll Win the League 🏆")

# Create input fields for all features
col1, col2 = st.columns(2)

with col1:
    played = st.number_input("Matches Played", min_value=0, max_value=38, value=19)
    won = st.number_input("Wins", min_value=0, max_value=38, value=12)
    drawn = st.number_input("Draws", min_value=0, max_value=38, value=3)
    lost = st.number_input("Losses", min_value=0, max_value=38, value=4)

with col2:
    gf = st.number_input("Goals For (GF)", min_value=0, max_value=150, value=40)
    ga = st.number_input("Goals Against (GA)", min_value=0, max_value=150, value=20)
    gd = st.number_input("Goal Difference (GD)", min_value=-100, max_value=150, value=20)
    points = st.number_input("Points", min_value=0, max_value=100, value=39)

# Predict button
if st.button("🔮 Predict Winner Chance"):
    # Convert input to NumPy array (same feature order as training)
    input_data = np.array([[played, won, drawn, lost, gf, ga, gd, points]])

    # Predict using the model
    prediction = model.predict(input_data)[0]

    # Display result
    if prediction == 1:
        st.success("🏆 This team has a HIGH chance to win the league!")
    else:
        st.warning("⚽ This team is unlikely to win the league this season.")