# -*- coding: utf-8 -*-
"""LeagueApp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lSdiJ47numuDEwbd0VXUkWGeF43q9ev8
"""

import streamlit as st
import pickle
import numpy as np

# App configuration
st.set_page_config(page_title="‚öΩ League Winner Predictor", layout="wide")
st.title("‚öΩ League Winner Predictor")
st.write("Enter team stats below to predict the match winner!")

# ‚úÖ Load your correct model file
try:
    with open("random_forest_model.pkl", "rb") as file:
        model = pickle.load(file)
    st.success("Model loaded successfully ‚úÖ")
except FileNotFoundError:
    st.error("‚ùå Model file 'random_forest_model.pkl' not found. Please make sure it‚Äôs in the same folder as this app.py file.")
    st.stop()

# Team options (update as per your dataset)
teams = ["Arsenal", "Chelsea", "Liverpool", "Manchester City"]

# Two-column layout for clean UI
col1, col2 = st.columns(2)

with col1:
    home_team = st.selectbox("Select Home Team", teams)
    home_points = st.number_input("Home Points", min_value=0, max_value=100, value=50)
    home_GF = st.number_input("Home Goals For (GF)", min_value=0, max_value=200, value=45)
    home_GA = st.number_input("Home Goals Against (GA)", min_value=0, max_value=200, value=40)

with col2:
    away_team = st.selectbox("Select Away Team", teams)
    away_points = st.number_input("Away Points", min_value=0, max_value=100, value=48)
    away_GF = st.number_input("Away Goals For (GF)", min_value=0, max_value=200, value=47)
    away_GA = st.number_input("Away Goals Against (GA)", min_value=0, max_value=200, value=43)

# Predict button
if st.button("üîÆ Predict Winner"):
    # Prepare input features (exact order as used during training)
    input_features = np.array([[home_points, away_points, home_GF, away_GF, home_GA, away_GA]])

    prediction = model.predict(input_features)[0]
    st.success(f"üèÜ Predicted Winner: **{prediction}**")